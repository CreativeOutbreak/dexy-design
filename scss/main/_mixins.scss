@mixin ni_visibility($parent) {
  #{$parent} {
    display: block !important;
    visibility: visible;
  }
  table#{$parent}  { display: table; }
  tr#{$parent}     { display: table-row !important; }
  th#{$parent},
  td#{$parent}     { display: table-cell !important; }
}

// [converter] $parent hack
@mixin ni_invisibility($parent) {
  #{$parent} {
    display: none !important;
    visibility: hidden;
  }
}
@mixin mod_rem($mod, $px) {
  #{$mod} : units-px($px);
  #{$mod} : px_rems($px);
}

@mixin mod_color($mod, $c, $a) {
  #{$mod} : lighten($c, ($a * 100%));
  #{$mod} : rgba($c, $a);
}

@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}


@mixin line_clamp() {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
}

/**  flex-box mixins **/

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin align-content($value) {
    -webkit-align-content: $value;
    align-content: $value;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin flex-flow($values) {
    -webkit-flex-flow: $values; 
    flex-flow: $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;  
    -moz-box-ordinal-group: $val;     
    -ms-flex-order: $val;     
    -webkit-order: $val;  
    order: $val;
}

/** Mixins for including inside media tags, as @extend doesn't work inside media tags */
@mixin ellipsis() {
    white-space: nowrap;
    width: 100%;                   
    overflow: hidden;              /* "overflow" value must be different from "visible" */ 
    text-overflow: ellipsis;
}
